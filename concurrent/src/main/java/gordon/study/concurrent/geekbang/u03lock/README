锁解决原子性问题

## 锁模型
需要互斥执行的代码称为临界区。
锁模型：
    ----创建保护资源R的锁：LR---
    -----加锁操作 lock(LR) -----
        进入临界区
            受保护资源：R
        退出临界区
    -----解锁操作 unlock(LR) ---

## Java 语言提供的锁技术：synchronized
当修饰静态方法的时候，锁定的是当前类的 Class 对象；当修饰非静态方法的时候，锁定的是当前实例对象 this。
（参考 SafeCalc.java）

## 锁和受保护资源的关系
受保护资源和锁之间的关联关系是 N:1 的关系。（强调每个资源只能有一把锁）

## 保护没有关联关系的多个资源
用不同的锁对受保护资源进行精细化管理，能够提升性能。这种锁还有个名字，叫细粒度锁。

## 保护有关联关系的多个资源
要确保锁能覆盖所有受保护资源。
（参考 AccountError.java，this 锁只能保护自己的账号，保护不了别人的）
（参考 Account.java，Account.class 锁能保护所有账号，但是转账操作变串行了，毫无效率）



